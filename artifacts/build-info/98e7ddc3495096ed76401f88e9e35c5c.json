{
	"id": "98e7ddc3495096ed76401f88e9e35c5c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"FundMe/Owner.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.18;\r\n    \r\ncontract Owner {\r\n    address immutable i_owner;\r\n\r\n    constructor() {\r\n        i_owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == i_owner, \"Not the owner\");\r\n        _;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"FundMe/Owner.sol": {
				"Owner": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"FundMe/Owner.sol\":65:284  contract Owner {... */\n  mstore(0x40, 0xa0)\n    /* \"FundMe/Owner.sol\":121:174  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"FundMe/Owner.sol\":156:166  msg.sender */\n  caller\n    /* \"FundMe/Owner.sol\":146:166  i_owner = msg.sender */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"FundMe/Owner.sol\":65:284  contract Owner {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x2a80e1ef1d7842f27f2e6be0972bb708b9a135c38860dbe73c27c3486c34f4de\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"FundMe/Owner.sol\":65:284  contract Owner {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220346303839a79d4a8d3a823afae2ad54f17e31a54fda36e489df16ea7680d19b164736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_12": {
									"entryPoint": null,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a0604052348015600f57600080fd5b503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050608051603f605960003960005050603f6000f3fe6080604052600080fdfea2646970667358221220346303839a79d4a8d3a823afae2ad54f17e31a54fda36e489df16ea7680d19b164736f6c63430008120033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x80 MLOAD PUSH1 0x3F PUSH1 0x59 PUSH1 0x0 CODECOPY PUSH1 0x0 POP POP PUSH1 0x3F PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE PUSH4 0x3839A79 0xD4 0xA8 0xD3 0xA8 0x23 0xAF 0xAE 0x2A 0xD5 0x4F OR 0xE3 BYTE SLOAD REVERT LOG3 PUSH15 0x489DF16EA7680D19B164736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "65:219:0:-:0;;;121:53;;;;;;;;;;156:10;146:20;;;;;;;;;;65:219;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220346303839a79d4a8d3a823afae2ad54f17e31a54fda36e489df16ea7680d19b164736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE PUSH4 0x3839A79 0xD4 0xA8 0xD3 0xA8 0x23 0xAF 0xAE 0x2A 0xD5 0x4F OR 0xE3 BYTE SLOAD REVERT LOG3 PUSH15 0x489DF16EA7680D19B164736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "65:219:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 65,
									"end": 284,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 65,
									"end": 284,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 65,
									"end": 284,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 121,
									"end": 174,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 121,
									"end": 174,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 121,
									"end": 174,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 121,
									"end": 174,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 121,
									"end": 174,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 121,
									"end": 174,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 174,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 121,
									"end": 174,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 121,
									"end": 174,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 121,
									"end": 174,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 121,
									"end": 174,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 156,
									"end": 166,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 146,
									"end": 166,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 146,
									"end": 166,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 146,
									"end": 166,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 146,
									"end": 166,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 146,
									"end": 166,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 146,
									"end": 166,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 146,
									"end": 166,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 146,
									"end": 166,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 146,
									"end": 166,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 146,
									"end": 166,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 65,
									"end": 284,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 65,
									"end": 284,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 65,
									"end": 284,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 65,
									"end": 284,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 65,
									"end": 284,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 284,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 65,
									"end": 284,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 284,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 65,
									"end": 284,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 65,
									"end": 284,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 284,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220346303839a79d4a8d3a823afae2ad54f17e31a54fda36e489df16ea7680d19b164736f6c63430008120033",
									".code": [
										{
											"begin": 65,
											"end": 284,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 65,
											"end": 284,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 65,
											"end": 284,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 65,
											"end": 284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 65,
											"end": 284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65,
											"end": 284,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"FundMe/Owner.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"FundMe/Owner.sol\":\"Owner\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"FundMe/Owner.sol\":{\"keccak256\":\"0x017fb57ff7552077b4fc0db4ec160ef7a7ed82443ee505c8013faba414f63ec0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17e418ade01985c83a6a9614922ae419b40650d968415bbecc4cb90f4c004cbc\",\"dweb:/ipfs/QmZABotAxpMLt73QiLc5Q87TXxXk8MsFFYRXFAmDS8EdwB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"FundMe/Owner.sol": {
				"ast": {
					"absolutePath": "FundMe/Owner.sol",
					"exportedSymbols": {
						"Owner": [
							25
						]
					},
					"id": 26,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Owner",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 25,
							"linearizedBaseContracts": [
								25
							],
							"name": "Owner",
							"nameLocation": "74:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "immutable",
									"name": "i_owner",
									"nameLocation": "105:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 25,
									"src": "87:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "87:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 11,
										"nodeType": "Block",
										"src": "135:39:0",
										"statements": [
											{
												"expression": {
													"id": 9,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 6,
														"name": "i_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "146:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 7,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "156:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 8,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "160:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "156:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "146:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 10,
												"nodeType": "ExpressionStatement",
												"src": "146:20:0"
											}
										]
									},
									"id": 12,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "132:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "135:0:0"
									},
									"scope": 25,
									"src": "121:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 23,
										"nodeType": "Block",
										"src": "203:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 15,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "222:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 16,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "226:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "222:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 17,
																"name": "i_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "236:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "222:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420746865206f776e6572",
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "245:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5",
																"typeString": "literal_string \"Not the owner\""
															},
															"value": "Not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5",
																"typeString": "literal_string \"Not the owner\""
															}
														],
														"id": 14,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "214:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "214:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "214:47:0"
											},
											{
												"id": 22,
												"nodeType": "PlaceholderStatement",
												"src": "272:1:0"
											}
										]
									},
									"id": 24,
									"name": "onlyOwner",
									"nameLocation": "191:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "200:2:0"
									},
									"src": "182:99:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 26,
							"src": "65:219:0",
							"usedErrors": []
						}
					],
					"src": "33:251:0"
				},
				"id": 0
			}
		}
	}
}